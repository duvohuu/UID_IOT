import React from 'react';
import { Card, CardContent, Typography, Box, Grid, Chip, IconButton, Tooltip, Alert } from '@mui/material';
import { 
    Timer as TimerIcon, 
    LocalDrink as BottleIcon, 
    Scale as WeightIcon,
    Visibility as ViewIcon,
    Report as ReportIcon 
} from '@mui/icons-material';

const WorkShiftCard = ({ shift, onClick }) => {
    
    const getStatusInfo = (status) => {
        switch (status) {
            case 'completed':
                return { 
                    label: 'Ho√†n th√†nh', 
                    color: 'success',
                    icon: '‚úÖ',
                    description: 'Ca ƒë√£ ho√†n th√†nh v√† l∆∞u data ch√≠nh x√°c'
                };
            case 'incomplete':  
                return { 
                    label: 'Ch∆∞a ho√†n ch·ªânh', 
                    color: 'warning',
                    icon: '‚ö†Ô∏è',
                    description: 'Ca ƒë√£ l∆∞u nh∆∞ng data c√≥ th·ªÉ ch∆∞a ƒë·∫ßy ƒë·ªß'
                };
            case 'interrupted': 
                return { 
                    label: 'B·ªã gi√°n ƒëo·∫°n', 
                    color: 'error',
                    icon: 'üö®',
                    description: 'Ca b·ªã gi√°n ƒëo·∫°n do m·∫•t k·∫øt n·ªëi'
                };
            case 'active':
                return { 
                    label: 'ƒêang ho·∫°t ƒë·ªông', 
                    color: 'info',
                    icon: 'üîÑ',
                    description: 'Ca ƒëang trong qu√° tr√¨nh th·ª±c hi·ªán'
                };
            default:
                return { 
                    label: status || 'Kh√¥ng x√°c ƒë·ªãnh', 
                    color: 'default',
                    icon: '‚ùì',
                    description: 'Tr·∫°ng th√°i kh√¥ng x√°c ƒë·ªãnh'
                };
        }
    };

    const statusInfo = getStatusInfo(shift.status);

    return (
        <Card 
            sx={{ 
                mb: 2, 
                cursor: 'pointer',
                transition: 'all 0.2s ease',
                border: (shift.status === 'incomplete' || shift.status === 'interrupted') 
                    ? `2px solid` 
                    : '1px solid',
                borderColor: (shift.status === 'incomplete' || shift.status === 'interrupted') 
                    ? `${statusInfo.color}.main` 
                    : 'divider',
                '&:hover': {
                    transform: 'translateY(-2px)',
                    boxShadow: 3
                }
            }}
            onClick={() => onClick && onClick(shift)}
        >
            <CardContent sx={{ p: 2 }}>
                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>
                    <Box>
                        <Typography variant="h6" sx={{ fontWeight: 600, fontSize: '1rem' }}>
                            {shift.shiftId} {/* ‚úÖ Hi·ªÉn th·ªã M1_S123, M2_S456, etc. */}
                        </Typography>
                        <Typography variant="caption" color="text.secondary">
                            {/* ‚úÖ S·ª¨A: Parse shiftId ƒë·ªÉ hi·ªÉn th·ªã info */}
                            {shift.shiftId && shift.shiftId.includes('_') ? (
                                `M√°y ${shift.shiftId.split('_')[0]?.slice(1)} - Ca ${shift.shiftId.split('_')[1]?.slice(1)}`
                            ) : (
                                `M√°y ${shift.machineNumber || 1} - Ca ${shift.shiftNumber || 1}`
                            )}
                        </Typography>
                    </Box>
                    
                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                        <Chip 
                            label={statusInfo.label}
                            color={statusInfo.color}
                            size="small"
                            variant={shift.status === 'active' ? 'filled' : 'outlined'}
                        />
                    </Box>
                </Box>

                {/* ‚úÖ Production info v·ªõi combined weight */}
                <Box sx={{ display: 'flex', gap: 2 }}>
                    <Typography variant="body2">
                        <strong>Chai:</strong> {shift.totalBottlesProduced || 0}
                    </Typography>
                    <Typography variant="body2">
                        <strong>Kh·ªëi l∆∞·ª£ng:</strong> {(shift.totalWeightFilled || 0).toLocaleString('vi-VN')} g
                    </Typography>
                </Box>
            </CardContent>
        </Card>
    );
};

export default WorkShiftCard;